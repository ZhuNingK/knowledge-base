import{_ as n,c as a,o as l,ag as e}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Jenkins Pipeline 配置文件注释","description":"","frontmatter":{},"headers":[{"level":1,"title":"Jenkins Pipeline 配置文件注释","slug":"Jenkins%20Pipeline%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B3%A8%E9%87%8A","link":"#Jenkins%20Pipeline%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B3%A8%E9%87%8A","children":[{"level":2,"title":"顶层结构","slug":"%E9%A1%B6%E5%B1%82%E7%BB%93%E6%9E%84","link":"#%E9%A1%B6%E5%B1%82%E7%BB%93%E6%9E%84","children":[]},{"level":2,"title":"agent 块","slug":"agent%20%E5%9D%97","link":"#agent%20%E5%9D%97","children":[]},{"level":2,"title":"environment 块","slug":"environment%20%E5%9D%97","link":"#environment%20%E5%9D%97","children":[]},{"level":2,"title":"stages 块","slug":"stages%20%E5%9D%97","link":"#stages%20%E5%9D%97","children":[{"level":3,"title":"1. clone code 阶段","slug":"1.%20clone%20code%20%E9%98%B6%E6%AE%B5","link":"#1.%20clone%20code%20%E9%98%B6%E6%AE%B5","children":[]},{"level":3,"title":"2. package 阶段","slug":"2.%20package%20%E9%98%B6%E6%AE%B5","link":"#2.%20package%20%E9%98%B6%E6%AE%B5","children":[]},{"level":3,"title":"3. build & push 阶段","slug":"3.%20build%20%26%20push%20%E9%98%B6%E6%AE%B5","link":"#3.%20build%20%26%20push%20%E9%98%B6%E6%AE%B5","children":[]},{"level":3,"title":"4. deploy to k8s 阶段","slug":"4.%20deploy%20to%20k8s%20%E9%98%B6%E6%AE%B5","link":"#4.%20deploy%20to%20k8s%20%E9%98%B6%E6%AE%B5","children":[]}]}]}],"relativePath":"docs/devops/base/jenkins/k8s/workflow.md","filePath":"docs/devops/base/jenkins/k8s/workflow.md","lastUpdated":null}'),p={name:"docs/devops/base/jenkins/k8s/workflow.md"};function o(c,s,r,t,i,y){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="Jenkins%20Pipeline%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B3%A8%E9%87%8A" tabindex="-1">Jenkins Pipeline 配置文件注释 <a class="header-anchor" href="#Jenkins Pipeline 配置文件注释" aria-label="Permalink to &quot;Jenkins Pipeline 配置文件注释&quot;">​</a></h1><h2 id="%E9%A1%B6%E5%B1%82%E7%BB%93%E6%9E%84" tabindex="-1">顶层结构 <a class="header-anchor" href="#顶层结构" aria-label="Permalink to &quot;顶层结构&quot;">​</a></h2><ul><li><code>pipeline</code>：定义 Jenkins Pipeline 的主结构。</li><li><code>agent</code>：指定 Pipeline 的执行环境，这里使用 Kubernetes。</li><li><code>environment</code>：定义全局环境变量，供 Pipeline 中的各个阶段使用。</li><li><code>stages</code>：定义 Pipeline 的多个阶段，每个阶段包含特定的任务。</li></ul><hr><h2 id="agent%20%E5%9D%97" tabindex="-1">agent 块 <a class="header-anchor" href="#agent 块" aria-label="Permalink to &quot;agent 块&quot;">​</a></h2><ul><li><code>kubernetes</code>：指定使用 Kubernetes 作为执行环境。 <ul><li><code>yaml</code>：定义 Kubernetes Pod 的 YAML 配置。 <ul><li><code>containers</code>：定义 Pod 中的容器。 <ul><li><code>name</code>：容器名称。</li><li><code>image</code>：容器镜像。</li><li><code>command</code> 和 <code>tty</code>：保持容器处于运行状态。</li><li><code>volumeMounts</code>：挂载 Maven 缓存目录。</li></ul></li><li><code>volumes</code>：定义 Pod 的卷。 <ul><li><code>hostPath</code>：将主机路径挂载到容器中，用于 Maven 缓存。</li></ul></li></ul></li></ul></li></ul><hr><h2 id="environment%20%E5%9D%97" tabindex="-1">environment 块 <a class="header-anchor" href="#environment 块" aria-label="Permalink to &quot;environment 块&quot;">​</a></h2><ul><li><code>KUBECONFIG_CREDENTIAL_ID</code>：Kubernetes 配置的凭据 ID。</li><li><code>REGISTRY</code>：Docker 镜像仓库地址。</li><li><code>REGISTRY_NAMESPACE</code>：镜像仓库的命名空间。</li><li><code>APP_NAME</code>：应用名称。</li><li><code>PROFILES_ACTIVE</code>：Spring Boot 的激活配置文件。</li></ul><hr><h2 id="stages%20%E5%9D%97" tabindex="-1">stages 块 <a class="header-anchor" href="#stages 块" aria-label="Permalink to &quot;stages 块&quot;">​</a></h2><h3 id="1.%20clone%20code%20%E9%98%B6%E6%AE%B5" tabindex="-1">1. <code>clone code</code> 阶段 <a class="header-anchor" href="#1. clone code 阶段" aria-label="Permalink to &quot;1. \`clone code\` 阶段&quot;">​</a></h3><ul><li><code>agent none</code>：不使用默认的 Kubernetes Agent。</li><li><code>steps</code>：定义具体的步骤。 <ul><li><code>container(&#39;base&#39;)</code>：在名为 <code>base</code> 的容器中执行。</li><li><code>sh</code>：更改文件权限。</li><li><code>git</code>：从 GitLab 拉取代码。</li></ul></li></ul><h3 id="2.%20package%20%E9%98%B6%E6%AE%B5" tabindex="-1">2. <code>package</code> 阶段 <a class="header-anchor" href="#2. package 阶段" aria-label="Permalink to &quot;2. \`package\` 阶段&quot;">​</a></h3><ul><li><code>agent none</code>：不使用默认的 Kubernetes Agent。</li><li><code>when</code>：条件判断，仅当环境变量 <code>METHOD</code> 为 <code>deploy</code> 时执行。</li><li><code>steps</code>：定义具体的步骤。 <ul><li><code>container(&#39;maven-jdk8&#39;)</code>：在名为 <code>maven-jdk8</code> 的容器中执行。</li><li><code>sh</code>：修改 Maven 配置文件，添加阿里云 Maven 镜像源。</li><li><code>sh</code>：执行 Maven 打包命令。</li></ul></li></ul><h3 id="3.%20build%20%26%20push%20%E9%98%B6%E6%AE%B5" tabindex="-1">3. <code>build &amp; push</code> 阶段 <a class="header-anchor" href="#3. build %26 push 阶段" aria-label="Permalink to &quot;3. \`build &amp; push\` 阶段&quot;">​</a></h3><ul><li><code>agent none</code>：不使用默认的 Kubernetes Agent。</li><li><code>when</code>：条件判断，仅当环境变量 <code>METHOD</code> 为 <code>deploy</code> 时执行。</li><li><code>environment</code>：定义阶段内的环境变量。 <ul><li><code>JAR_NAME</code>：通过 Shell 脚本获取打包生成的 JAR 文件名称。</li></ul></li><li><code>steps</code>：定义具体的步骤。 <ul><li><code>container(&#39;base&#39;)</code>：在名为 <code>base</code> 的容器中执行。</li><li><code>dir</code>：切换到目标目录。</li><li><code>sh</code>：生成 Dockerfile 文件。</li><li><code>sh</code>：构建 Docker 镜像。</li><li><code>withCredentials</code>：使用 Docker 仓库的凭据登录并推送镜像。</li></ul></li></ul><h3 id="4.%20deploy%20to%20k8s%20%E9%98%B6%E6%AE%B5" tabindex="-1">4. <code>deploy to k8s</code> 阶段 <a class="header-anchor" href="#4. deploy to k8s 阶段" aria-label="Permalink to &quot;4. \`deploy to k8s\` 阶段&quot;">​</a></h3><ul><li><code>agent none</code>：不使用默认的 Kubernetes Agent。</li><li><code>when</code>：条件判断，仅当环境变量 <code>METHOD</code> 为 <code>deploy</code> 时执行。</li><li><code>environment</code>：定义阶段内的环境变量。 <ul><li><code>VERSION_NUMBER</code>：版本号，使用 Jenkins 的构建号。</li><li><code>JAR_NAME</code>：通过 Shell 脚本获取打包生成的 JAR 文件名称。</li></ul></li><li><code>steps</code>：定义具体的步骤。 <ul><li><code>container(&#39;base&#39;)</code>：在名为 <code>base</code> 的容器中执行。</li><li><code>withKubeConfig</code>：使用 Kubernetes 配置文件执行命令。 <ul><li><code>sh</code>：通过 <code>envsubst</code> 替换变量并应用 Kubernetes 的 Deployment 和 Service 配置。</li></ul></li></ul></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="color:#59873A;">pipeline</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">  agent</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">    kubernetes</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">      //cloud</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">kubernetes</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">      inheritFrom</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">base maven</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">      yaml</span><span style="color:#B5695977;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#B56959;">spec:</span></span>
<span class="line"><span style="color:#B56959;">  containers:</span></span>
<span class="line"><span style="color:#B56959;">  - name: maven-jdk8</span></span>
<span class="line"><span style="color:#B56959;">    image: maven:3.6.3-openjdk-8-slim</span></span>
<span class="line"><span style="color:#B56959;">    command: [&#39;cat&#39;]</span></span>
<span class="line"><span style="color:#B56959;">    tty: true</span></span>
<span class="line"><span style="color:#B56959;">    volumeMounts:</span></span>
<span class="line"><span style="color:#B56959;">    - name: maven-cache</span></span>
<span class="line"><span style="color:#B56959;">      mountPath: /root/.m2</span></span>
<span class="line"><span style="color:#B56959;">  volumes:</span></span>
<span class="line"><span style="color:#B56959;">  - name: maven-cache</span></span>
<span class="line"><span style="color:#B56959;">    hostPath:</span></span>
<span class="line"><span style="color:#B56959;">      path: /data/jenkins/jenkins_maven_cache</span></span>
<span class="line"><span style="color:#B5695977;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#393A34;">    }</span></span>
<span class="line"><span style="color:#393A34;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">  environment</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">    KUBECONFIG_CREDENTIAL_ID</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#B56959;">63709dee-48c3-46ef-b7f4-4e2a0bd360da</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#59873A;">    REGISTRY</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#B56959;">10.1.0.123:3380</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#59873A;">    REGISTRY_NAMESPACE</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#B56959;">dykunshan</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#59873A;">    APP_NAME</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#B56959;">dykunshan-java-mini-activity</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#59873A;">    PROFILES_ACTIVE</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#B56959;">test</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#393A34;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">  stages</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">    stage(</span><span style="color:#59873A;">&#39;clone code&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">      agent</span><span style="color:#B56959;"> none</span></span>
<span class="line"><span style="color:#59873A;">      steps</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        container(</span><span style="color:#59873A;">&#39;base&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">          sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">chown 1000.1000 -R ./</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">          git(url:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">https://gitlab.chinacici.com/dykunshan-backend/java-mini-activity.git</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> credentialsId:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">gitlab-credential</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> branch:</span><span style="color:#B5695977;"> &quot;</span><span style="color:#B56959;">test</span><span style="color:#B5695977;">&quot;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> changelog:</span><span style="color:#1E754F;"> true</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> poll:</span><span style="color:#1E754F;"> false</span><span style="color:#393A34;">)</span></span>
<span class="line"><span style="color:#999999;">        }</span></span>
<span class="line"><span style="color:#999999;">      }</span></span>
<span class="line"><span style="color:#393A34;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">    stage(</span><span style="color:#59873A;">&#39;package&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">      agent</span><span style="color:#B56959;"> none</span></span>
<span class="line"><span style="color:#59873A;">      when</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        environment</span><span style="color:#B56959;"> name:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">METHOD</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> value:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">deploy</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#999999;">      }</span></span>
<span class="line"><span style="color:#59873A;">      steps</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        container(</span><span style="color:#59873A;">&#39;maven-jdk8&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">          sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">sed -i &quot;/&lt;\\\\/mirrors&gt;/i\\\\    &lt;mirror&gt;\\\\n      &lt;id&gt;alimaven&lt;\\\\/id&gt;\\\\n      &lt;name&gt;aliyun maven&lt;\\\\/name&gt;\\\\n      &lt;url&gt;http:\\\\/\\\\/maven.aliyun.com\\\\/nexus\\\\/content\\\\/groups\\\\/public\\\\/&lt;\\\\/url&gt;\\\\n      &lt;mirrorOf&gt;central&lt;\\\\/mirrorOf&gt;\\\\n    &lt;\\\\/mirror&gt;&quot; /usr/share/maven/conf/settings.xml</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">          sh</span><span style="color:#B5695977;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#B56959;">          mvn -version</span></span>
<span class="line"><span style="color:#B56959;">          mvn clean package -pl \${MODULE_NAME} -am</span></span>
<span class="line"><span style="color:#B5695977;">          &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#999999;">        }</span></span>
<span class="line"><span style="color:#393A34;">      }</span></span>
<span class="line"><span style="color:#393A34;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">    stage(</span><span style="color:#59873A;">&#39;build &amp; push&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">      agent</span><span style="color:#B56959;"> none</span></span>
<span class="line"><span style="color:#59873A;">      when</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        environment</span><span style="color:#B56959;"> name:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">METHOD</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> value:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">deploy</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#999999;">      }</span></span>
<span class="line"><span style="color:#59873A;">      environment</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        JAR_NAME</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">sh(script</span><span style="color:#AB5959;">:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">cd \${MODULE_NAME}/target &amp;&amp; ls *.jar</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">, returnStdout</span><span style="color:#AB5959;">:</span><span style="color:#B56959;">true).trim()</span><span style="color:#999999;">}</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#393A34;">      }</span></span>
<span class="line"><span style="color:#59873A;">      steps</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        container(</span><span style="color:#59873A;">&#39;base&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">          dir(</span><span style="color:#59873A;">&quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">MODULE_NAME</span><span style="color:#999999;">}</span><span style="color:#59873A;">/target&quot;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">            sh</span><span style="color:#B5695977;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#B56959;">            cat &gt;Dockerfile &lt;&lt; EOF</span></span>
<span class="line"><span style="color:#B56959;">FROM busybox</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B56959;">COPY \${JAR_NAME} /code/</span></span>
<span class="line"><span style="color:#B56959;">EOF</span></span>
<span class="line"><span style="color:#B56959;">            cat Dockerfile</span></span>
<span class="line"><span style="color:#B5695977;">            &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#59873A;">            sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">docker build -f Dockerfile -t \${REGISTRY}/\${REGISTRY_NAMESPACE}/\${APP_NAME}-\${MODULE_NAME}:\${BUILD_NUMBER} .</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">            withCredentials([usernamePassword(credentialsId</span><span style="color:#B56959;"> :</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">harbor-credential</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;"> ,passwordVariable</span><span style="color:#B56959;"> :</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">DOCKER_PASSWORD</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;"> ,usernameVariable</span><span style="color:#B56959;"> :</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">DOCKER_USERNAME</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;"> ,</span><span style="color:#393A34;">)]) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">              sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">echo &quot;\${DOCKER_PASSWORD}&quot; | docker login \${REGISTRY} -u &quot;\${DOCKER_USERNAME}&quot; --password-stdin</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">              sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">docker push \${REGISTRY}/\${REGISTRY_NAMESPACE}/\${APP_NAME}-\${MODULE_NAME}:\${BUILD_NUMBER}</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#999999;">            }</span></span>
<span class="line"><span style="color:#999999;">          }</span></span>
<span class="line"><span style="color:#999999;">        }</span></span>
<span class="line"><span style="color:#393A34;">      }</span></span>
<span class="line"><span style="color:#393A34;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">    stage(</span><span style="color:#59873A;">&#39;deploy to k8s&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">      agent</span><span style="color:#B56959;"> none</span></span>
<span class="line"><span style="color:#59873A;">      when</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        environment</span><span style="color:#B56959;"> name:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">METHOD</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> value:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">deploy</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#999999;">      }</span></span>
<span class="line"><span style="color:#59873A;">      environment</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        VERSION_NUMBER</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">BUILD_NUMBER</span><span style="color:#999999;">}</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#59873A;">        JAR_NAME</span><span style="color:#B56959;"> =</span><span style="color:#B5695977;"> &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">sh(script</span><span style="color:#AB5959;">:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">cd \${MODULE_NAME}/target &amp;&amp; ls *.jar</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">, returnStdout</span><span style="color:#AB5959;">:</span><span style="color:#B56959;">true).trim()</span><span style="color:#999999;">}</span><span style="color:#B5695977;">&quot;</span></span>
<span class="line"><span style="color:#393A34;">      }</span></span>
<span class="line"><span style="color:#59873A;">      steps</span><span style="color:#B56959;"> {</span></span>
<span class="line"><span style="color:#59873A;">        container</span><span style="color:#393A34;"> (</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">base</span><span style="color:#B5695977;">&#39;</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">            withKubeConfig([credentialsId:</span><span style="color:#B5695977;"> &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">env.KUBECONFIG_CREDENTIAL_ID</span><span style="color:#999999;">}</span><span style="color:#B5695977;">&quot;</span><span style="color:#B56959;">,</span><span style="color:#B56959;"> serverUrl:</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">https://kubernetes.default</span><span style="color:#B5695977;">&#39;</span><span style="color:#B56959;">]</span><span style="color:#393A34;">) </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#59873A;">            sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">envsubst &lt; k8s/deployment.yaml | kubectl apply -f -</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#59873A;">            sh</span><span style="color:#B5695977;"> &#39;</span><span style="color:#B56959;">envsubst &lt; k8s/service.yaml | kubectl apply -f -</span><span style="color:#B5695977;">&#39;</span></span>
<span class="line"><span style="color:#999999;">          }</span></span>
<span class="line"><span style="color:#999999;">        }</span></span>
<span class="line"><span style="color:#393A34;">      }</span></span>
<span class="line"><span style="color:#393A34;">    }</span></span>
<span class="line"><span style="color:#393A34;">  }</span></span>
<span class="line"><span style="color:#393A34;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br></div></div>`,20)]))}const d=n(p,[["render",o]]);export{u as __pageData,d as default};
