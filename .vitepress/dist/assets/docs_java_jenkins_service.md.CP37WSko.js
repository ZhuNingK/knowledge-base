import{_ as n,c as a,o as p,ag as l}from"./chunks/framework.Ds6Eueu6.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/java/jenkins/service.md","filePath":"docs/java/jenkins/service.md","lastUpdated":null}'),e={name:"docs/java/jenkins/service.md"};function o(r,s,c,t,i,y){return p(),a("div",null,s[0]||(s[0]=[l(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="color:#59873A;">---</span></span>
<span class="line"><span style="color:#998418;">kind</span><span style="color:#999999;">:</span><span style="color:#B56959;"> Service</span><span style="color:#A0ADA0;"> # 定义 Kubernetes Service 资源</span></span>
<span class="line"><span style="color:#998418;">apiVersion</span><span style="color:#999999;">:</span><span style="color:#B56959;"> v1</span><span style="color:#A0ADA0;"> # 使用的 API 版本</span></span>
<span class="line"><span style="color:#998418;">metadata</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#998418;">  name</span><span style="color:#999999;">:</span><span style="color:#B56959;"> \${APP_NAME}-\${MODULE_NAME}-svc</span><span style="color:#A0ADA0;"> # Service 的名称，使用变量替换</span></span>
<span class="line"><span style="color:#998418;">  namespace</span><span style="color:#999999;">:</span><span style="color:#B56959;"> \${REGISTRY_NAMESPACE}</span><span style="color:#A0ADA0;"> # Service 所属的命名空间</span></span>
<span class="line"><span style="color:#998418;">  labels</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#998418;">    app</span><span style="color:#999999;">:</span><span style="color:#B56959;"> \${APP_NAME}-\${MODULE_NAME}-svc</span><span style="color:#A0ADA0;"> # 标签，用于标识该 Service</span></span>
<span class="line"><span style="color:#998418;">spec</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#998418;">  ports</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#999999;">    -</span><span style="color:#998418;"> name</span><span style="color:#999999;">:</span><span style="color:#B56959;"> http-80</span><span style="color:#A0ADA0;"> # 端口名称</span></span>
<span class="line"><span style="color:#998418;">      protocol</span><span style="color:#999999;">:</span><span style="color:#B56959;"> TCP</span><span style="color:#A0ADA0;"> # 使用的协议</span></span>
<span class="line"><span style="color:#998418;">      port</span><span style="color:#999999;">:</span><span style="color:#2F798A;"> 80</span><span style="color:#A0ADA0;"> # Service 暴露的端口</span></span>
<span class="line"><span style="color:#998418;">      targetPort</span><span style="color:#999999;">:</span><span style="color:#2F798A;"> 80</span><span style="color:#A0ADA0;"> # 后端 Pod 的目标端口</span></span>
<span class="line"><span style="color:#998418;">  selector</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#998418;">    app</span><span style="color:#999999;">:</span><span style="color:#B56959;"> \${APP_NAME}-\${MODULE_NAME}</span><span style="color:#A0ADA0;"> # 选择器，用于匹配目标 Pod</span></span>
<span class="line"><span style="color:#998418;">  type</span><span style="color:#999999;">:</span><span style="color:#B56959;"> NodePort</span><span style="color:#A0ADA0;"> # Service 类型，暴露为 NodePort</span></span>
<span class="line"><span style="color:#998418;">  sessionAffinity</span><span style="color:#999999;">:</span><span style="color:#B56959;"> None</span><span style="color:#A0ADA0;"> # 会话亲和性设置</span></span>
<span class="line"><span style="color:#998418;">  externalTrafficPolicy</span><span style="color:#999999;">:</span><span style="color:#B56959;"> Cluster</span><span style="color:#A0ADA0;"> # 外部流量策略</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,1)]))}const m=n(e,[["render",o]]);export{b as __pageData,m as default};
